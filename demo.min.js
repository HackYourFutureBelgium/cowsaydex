const _0x58fc = ['value', 'mkdirSync', 'argv', 'cowsay', 'slice', 'map', 'assign', '\x20is\x20not\x20a\x20supported\x20verb,\x20the\x20cow\x20will\x20\x22say\x22', 'I\x20cow\x20hard', 'file', 'includes', 'split', 'think', 'list', '\x20directory\x20---', 'accessSync', 'exit', 'reduce', '.txt', 'cowsaid', 'log', 'verb', 'key', 'keys', 'say', 'indexOf', 'CONFG\x20OPTIONS\x0atext:\x22lorem\x20ipsum\x22\x20--\x20what\x20the\x20cow\x20should\x20say\x0a\x20\x20default\x20--\x20I\x20cow\x20hard\x0ae:\x22oo\x22\x20--\x20the\x20cow\x27s\x20eyes.\x0a\x20\x20not\x20all\x20cowfiles\x20have\x20customizable\x20eyes\x0a\x20\x202\x20characters\x20only\x20is\x20recommended\x0a\x20\x20default\x20--\x20\x22oo\x22\x0aT:\x22\x20\x20\x22\x20--\x20the\x20cow\x27s\x20tongue\x0a\x20\x20not\x20all\x20cowfiles\x20have\x20customizable\x20tongues\x0a\x20\x202\x20characters\x20only\x20is\x20recommended\x0a\x20\x20default\x20--\x20\x22\x20\x20\x22\x0af:\x22bees\x22\x20--\x20the\x20cowfile\x20to\x20render\x0a\x20\x20default\x20--\x20default\x0afile:fileName.txt\x20--\x20the\x20file\x20name\x20to\x20render\x20to\x0a\x20\x20default\x20--\x20(new\x20Date()).toJSON()\x20+\x20\x22.txt\x22\x0averb:\x22say\x22\x20--\x20does\x20the\x20cow\x20say\x20or\x20think?\x0a\x20\x20only\x20\x22say\x22\x20and\x20\x22think\x22\x20are\x20supported\x0a\x20\x20default\x20--\x20\x22say\x22\x0a\x0aFLAGS\x0a-h\x20--\x20prints\x20this\x20helpful\x20message\x0a-l\x20--\x20prints\x20all\x20possible\x20cows\x0aif\x20either\x20flag\x20is\x20passed\x20as\x20an\x20argument,\x20the\x20cow\x20will\x20not\x20render', 'substr']; (function (_0x30dc3f, _0x58fce9) { const _0x51bd01 = function (_0x1d2463) { while (--_0x1d2463) { _0x30dc3f['push'](_0x30dc3f['shift']()); } }; _0x51bd01(++_0x58fce9); }(_0x58fc, 0x131)); const _0x51bd = function (_0x30dc3f, _0x58fce9) { _0x30dc3f = _0x30dc3f - 0x0; let _0x51bd01 = _0x58fc[_0x30dc3f]; return _0x51bd01; }; const _0x2c32db = require(_0x51bd('0x6')); const _0x5c97e4 = require('fs'); const _0x1b34d9 = _0x51bd('0x16'); const _0x50e587 = [_0x51bd('0x1b'), _0x51bd('0xf')]; const _0x2f879d = _0x51bd('0x1'); const _0x516b49 = process[_0x51bd('0x5')][_0x51bd('0x7')](0x2); if (_0x516b49[_0x51bd('0xd')]('-h')) { console[_0x51bd('0x17')](_0x2f879d); process[_0x51bd('0x13')](0x0); } if (_0x516b49[_0x51bd('0xd')]('-l')) { _0x2c32db[_0x51bd('0x10')]((_0x545091, _0x268367) => { console['log'](_0x268367['join']('\x0a')); }); process[_0x51bd('0x13')](0x0); } const _0x587b31 = { 'text': _0x51bd('0xb'), 'e': 'oo', 'T': '\x20\x20', 'f': 'default', 'file': new Date()['toJSON']() + _0x51bd('0x15'), 'verb': _0x51bd('0x1b') }; const _0x55b04d = _0x516b49['filter'](_0x3c0d7a => { const _0x18e57b = _0x3c0d7a[_0x51bd('0xe')]('='); const _0x11d49c = _0x18e57b[0x0]; return Object[_0x51bd('0x1a')](_0x587b31)[_0x51bd('0xd')](_0x11d49c); })[_0x51bd('0x8')](_0x27463b => { const _0x47c2ec = _0x27463b[_0x51bd('0x0')]('='); const _0x5d68d9 = _0x27463b['substr'](0x0, _0x47c2ec); const _0x4a0b0c = _0x27463b[_0x51bd('0x2')](_0x47c2ec + 0x1); return { 'key': _0x5d68d9, 'value': _0x4a0b0c }; })[_0x51bd('0x14')]((_0x535da5, _0x37c8db) => { _0x535da5[_0x37c8db[_0x51bd('0x19')]] = _0x37c8db[_0x51bd('0x3')]; return _0x535da5; }, {}); if (!_0x50e587[_0x51bd('0xd')](_0x55b04d[_0x51bd('0x18')])) { console['log'](_0x55b04d['verb'] + _0x51bd('0xa')); delete _0x55b04d[_0x51bd('0x18')]; } const _0x4f086a = Object[_0x51bd('0x9')](_0x587b31, _0x55b04d); const _0x28d96b = _0x2c32db[_0x4f086a['verb']](_0x4f086a); try { _0x5c97e4[_0x51bd('0x12')]('./' + _0x1b34d9); } catch (_0x583471) { console[_0x51bd('0x17')]('---\x20creating\x20./' + _0x1b34d9 + _0x51bd('0x11')); _0x5c97e4[_0x51bd('0x4')]('./' + _0x1b34d9); } console['log'](_0x28d96b); _0x5c97e4['writeFileSync']('./' + _0x1b34d9 + '/' + _0x4f086a[_0x51bd('0xc')], _0x28d96b);
